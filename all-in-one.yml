version: "3"

services:
  mongodb:
    image: mongo
    networks:
      - waber
    command: --bind_ip 0.0.0.0
    volumes:
      - mongo-db-data:/data/db
  mysql:
    image: mysql
    networks:
      - waber
    environment:
      MYSQL_ROOT_PASSWORD: 1qaz2wsx
    volumes:
      - mysql-db-data:/var/lib/mysql
  rabbitmq:
    image: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: waber
      RABBITMQ_DEFAULT_PASS: waber
      RABBITMQ_DEFAULT_VHOST: /waber
    networks:
      - waber
  user-service:
    build: spring-boot/spring-boot-user
    networks:
      - waber
    ports:
    - "8011:8011"
    depends_on:
      - mysql
    environment:
      spring.profiles.active: microservice
      spring.datasource.url: jdbc:mysql://mysql:3306/waber_match
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/api/users`) || PathPrefix(`/api/passengers`) || PathPrefix(`/api/drivers`)"
      - "traefik.http.routers.user-service.entrypoints=web"
      - "traefik.http.routers.user-service.service=user-service"
      - "traefik.http.services.user-service.loadbalancer.server.port=80"
  match-service:
    build: spring-boot/spring-boot-match
    networks:
      - waber
    depends_on:
      - mysql
      - rabbitmq
    environment:
      spring.profiles.active: microservice
      spring.datasource.url: jdbc:mysql://mysql:3306/waber_match
  trip-service:
    build: spring-boot/spring-boot-trip
    networks:
      - waber
    depends_on:
      - mongodb
      - rabbitmq
    environment:
      spring.profiles.active: microservice
      spring.data.mongodb.uri: mongodb://mongodb:27017/waber_trip
  payment-service:
    build: spring-boot/spring-boot-payment
    networks:
      - waber
    depends_on:
      - mongodb
    environment:
      spring.profiles.active: microservice
      spring.data.mongodb.uri: mongodb://mongodb:27017/waber_payment
  traefik:
    image: traefik:v2.3
    command:
      - "--entryPoints.web.address=:80"
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - waber

volumes:
  mongo-db-data:
  mysql-db-data:
networks:
  waber:
