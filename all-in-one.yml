version: "3"

services:
  mongodb:
    image: mongo
    command: --bind_ip 0.0.0.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-db-data:/data/db
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1qaz2wsx
    ports:
    - "3306:3306"
    volumes:
      - mysql-db-data:/var/lib/mysql
      - "./init-databases.sql:/data/application/init-db.sql"
    command:
      - "--init-file=/data/application/init-db.sql"
  rabbitmq:
    image: rabbitmq:3-management
    ports:
    - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: waber
      RABBITMQ_DEFAULT_PASS: waber
      RABBITMQ_DEFAULT_VHOST: /waber
  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "16686:16686"
  user-service:
    build: spring-boot/spring-boot-user
    ports:
    - "8011:8011"
    depends_on:
      - mysql
      - rabbitmq
      - jaeger
    environment:
      spring.profiles.active: microservice
      spring.datasource.url: jdbc:mysql://mysql:3306/waber_user
      spring.rabbitmq.host: rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/api/users`) || PathPrefix(`/api/passengers`) || PathPrefix(`/api/drivers`)"
      - "traefik.http.routers.user-service.entrypoints=web"
      - "traefik.http.routers.user-service.service=user-service"
      - "traefik.http.services.user-service.loadbalancer.server.port=80"
      - "traefik.http.routers.user-service.priority=1"
  match-service:
    build: spring-boot/spring-boot-match
    depends_on:
      - mysql
      - rabbitmq
      - jaeger
    environment:
      spring.profiles.active: microservice
      spring.datasource.url: jdbc:mysql://mysql:3306/waber_match
      spring.rabbitmq.host: rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.match-service.rule=PathPrefix(`/api/users/{passengerId:[0-9]+}/matches`)"
      - "traefik.http.routers.match-service.entrypoints=web"
      - "traefik.http.routers.match-service.service=match-service"
      - "traefik.http.services.match-service.loadbalancer.server.port=80"
      - "traefik.http.routers.match-service.priority=2"
  trip-service:
    build: spring-boot/spring-boot-trip
    depends_on:
      - mysql
      - rabbitmq
      - jaeger
    environment:
      spring.profiles.active: microservice
      spring.data.mongodb.uri: mongodb://mongodb:27017/waber_trip
      spring.rabbitmq.host: rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.trip-service.rule=PathPrefix(`/api/trips`) || PathPrefix(`/api/users/{passengerId:[0-9]+}/trips`)"
      - "traefik.http.routers.trip-service.entrypoints=web"
      - "traefik.http.routers.trip-service.service=trip-service"
      - "traefik.http.services.trip-service.loadbalancer.server.port=80"
      - "traefik.http.routers.trip-service.priority=3"
#  payment-service:
#    build: spring-boot/spring-boot-payment
#    depends_on:
#      - mongodb
#    environment:
#      spring.profiles.active: microservice
#      spring.data.mongodb.uri: mongodb://mongodb:27017/waber_payment
#      spring.rabbitmq.host: rabbitmq
  broker:
    build: spring-boot/spring-boot-broker
    depends_on:
      - rabbitmq
      - jaeger
    environment:
      spring.rabbitmq.host: rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.broker.rule=PathPrefix(`/broker`) || PathPrefix(`/topic`)"
      - "traefik.http.routers.broker.entrypoints=web"
      - "traefik.http.routers.broker.service=broker"
      - "traefik.http.services.broker.loadbalancer.server.port=80"
  traefik:
    image: traefik:v2.3
    command:
      - "--entryPoints.web.address=:80"
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  mongo-db-data:
  mysql-db-data:
